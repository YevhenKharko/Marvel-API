{"version":3,"file":"static/js/63.12adce07.chunk.js","mappings":"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","sources":["components/errorBoundary/ErrorBoundary.js","components/comicsList/ComicsList.js","components/banner/Banner.js","components/pages/ComicsPage.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport Error from \"../error/Error\";\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        error: false,\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return <Error/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import { Link } from 'react-router-dom';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport Error from '../error/Error';\r\nimport Spinner from '../spinner/Spinner';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport './comicsList.scss';\r\n\r\nconst ComicsList = () => {\r\n    const {getAllComics, _comicsOffset, loading, error} = useMarvelService();\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [comicsOffset, setComicsOffset] = useState(0);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        setComicsOffset(_comicsOffset);\r\n        onRequest(_comicsOffset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset).then(onComicsListLoaded);\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if(newComicsList.length < 8) {\r\n            ended = true;\r\n        }        \r\n        setComicsList(comicsList => [...comicsList,...newComicsList]);\r\n        setNewItemLoading(false);\r\n        setComicsOffset(comicsOffset => comicsOffset + 8);\r\n        setComicsEnded(ended);\r\n    }\r\n\r\n    const refsItem = useRef([]);\r\n\r\n    const renderItems = (arr) => {\r\n        let renderedIds = [];\r\n\r\n        const items = arr.map((elem) => {\r\n            if (arr.length === 0) return null;\r\n            if (renderedIds.includes(elem.id)) return null;\r\n            renderedIds.push(elem.id);\r\n\r\n                return (\r\n                    <section className=\"comics__item\" \r\n                             key={elem.id} \r\n                             ref={refsItem}>\r\n                        <Link to={`/comics/${elem.id}`}>\r\n                            <div className=\"item-img\">\r\n                                <img src={elem.thumbnail} alt={elem.title}/>\r\n                            </div>\r\n                        </Link>\r\n                            <div className=\"item-text\">\r\n                                <h2 className=\"title\">{elem.title}</h2>\r\n                                <span className=\"price\">{elem.price}</span>\r\n                            </div>\r\n                    </section> \r\n            )\r\n        })\r\n            return (\r\n                <>\r\n                {items}\r\n                </>\r\n            )\r\n    }\r\n    \r\n   \r\n    const items = renderItems(comicsList);\r\n    const errorMsg = error ? <Error/> : null;\r\n    const spinner = loading && !newItemLoading? <Spinner/> : null;\r\n    return (\r\n        <section className=\"comics-store\">\r\n                {errorMsg}\r\n                {spinner}\r\n                {items}\r\n                 <button className=\"comics-btn\"\r\n                    disabled={newItemLoading}\r\n                    style={{'display': comicsEnded || comicsList.length < 1 ? 'none' : 'block'}}\r\n                    onClick={() => onRequest(comicsOffset)}>Load more</button>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import './banner.scss';\r\nimport bannerImage from '../../resources/img/banner.jpg' ;\r\n\r\nconst Banner = () => {\r\n\r\n    return (\r\n        <section className=\"banner\">\r\n            <img src={bannerImage} alt=\"comics banner\"/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Banner;","import ComicsList from '../comicsList/ComicsList';\r\nimport Banner from '../banner/Banner';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\n\r\nconst ComicsPage = () => {\r\n    \r\n    return (\r\n        <div className=\"bg__art\"\r\n            style={{backgroundImage: `none`,}}>\r\n            <Banner/>\r\n            <main className=\"main\">\r\n                <ErrorBoundary>\r\n                    <ComicsList/>\r\n                </ErrorBoundary>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"names":["ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","error","_createClass","key","value","errorInfo","console","log","this","setState","_jsx","Error","props","children","Component","_useMarvelService","useMarvelService","getAllComics","_comicsOffset","loading","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","comicsOffset","setComicsOffset","_useState7","_useState8","comicsEnded","setComicsEnded","useEffect","onRequest","offset","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","refsItem","useRef","items","arr","renderedIds","map","elem","includes","id","push","_jsxs","className","ref","Link","to","src","thumbnail","alt","title","price","_Fragment","renderItems","errorMsg","spinner","Spinner","disabled","style","onClick","bannerImage","backgroundImage","Banner","ComicsList"],"sourceRoot":""}