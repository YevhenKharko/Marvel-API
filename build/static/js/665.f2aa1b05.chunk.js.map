{"version":3,"file":"static/js/665.f2aa1b05.chunk.js","mappings":"oPA8DA,EAtDkB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA+CC,EAAAA,EAAAA,KAAxCC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAQJ,EAARI,SAAUC,EAAUL,EAAVK,YAEjCC,EAAAA,EAAAA,YAAU,WACNC,GACJ,GAAG,CAACf,IAEJ,IAAMe,EAAc,WAChBF,IACAD,EAASZ,GAASgB,KAAKC,GAAeC,MAAMP,EAChD,EAEMM,EAAgB,SAACX,GACnBC,EAASD,EACb,EAEMa,EAAY,SAAHC,GAAiB,IAAZd,EAAKc,EAALd,MAETe,EAAmDf,EAAnDe,MAAOC,EAA4ChB,EAA5CgB,KAAMC,EAAsCjB,EAAtCiB,MAAOC,EAA+BlB,EAA/BkB,MAAOC,EAAwBnB,EAAxBmB,UAAWC,EAAapB,EAAboB,UAC7C,OACIC,EAAAA,EAAAA,MAAA,WAASC,UAAU,cAAaC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,SACpBH,EAAUK,MAAM,mBACfD,EAAAA,EAAAA,KAAA,OAAKE,IAAKN,EAAWO,IAAKZ,EAAOa,MAAO,CAAEC,UAAW,cACrDL,EAAAA,EAAAA,KAAA,OAAKE,IAAKN,EAAWO,IAAKZ,OAEhCM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,QAAOC,SAAER,KACvBS,EAAAA,EAAAA,KAAA,KAAGF,UAAU,OAAMC,SAAEP,KACrBQ,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAEN,KACzBI,EAAAA,EAAAA,MAAA,QAAMC,UAAU,OAAMC,SAAA,CAAC,cAAYJ,MACnCK,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAEL,QAE7BM,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACR,UAAU,OAAOS,GAAG,UAASR,SAAC,kBAGhD,EAEMS,EAAW3B,GAAQmB,EAAAA,EAAAA,KAACS,EAAAA,EAAK,IAAK,KAC9BC,EAAU9B,GAAUoB,EAAAA,EAAAA,KAACW,EAAAA,EAAO,IAAK,KACjCC,EAAYhC,GAAWC,GAAoB,OAAVL,EAA8C,MAA7BwB,EAAAA,EAAAA,KAACX,EAAS,CAACb,MAAOA,IAE1E,OACIqB,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAd,SAAA,CACKS,EACAE,EACAE,IAIb,C","sources":["components/pages/ComicItem.js"],"sourcesContent":["import { useParams, Link} from 'react-router-dom';\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport Error from '../error/Error';\r\nimport './comicItem.scss';\r\n\r\nconst ComicItem = () => {\r\n    const { comicId } = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const {loading, error, getComic, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic();\r\n    }, [comicId]);\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicId).then(onComicLoaded).catch(error); \r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n\r\n    const ComicInfo = ({comic}) => {\r\n    \r\n        const {title, desc, pages, price, languages, thumbnail} = comic;\r\n        return (\r\n            <section className=\"comic__item\">\r\n                <div className=\"item-img\">\r\n                    {thumbnail.match(/not_available/g)\r\n                    ? <img src={thumbnail} alt={title} style={{ objectFit: 'contain' }} />\r\n                    : <img src={thumbnail} alt={title} />}\r\n                </div>\r\n                <div className=\"item-text\">\r\n                    <h2 className=\"title\">{title}</h2>\r\n                    <p className=\"text\">{desc}</p>\r\n                    <span className=\"pages\">{pages}</span>\r\n                    <span className=\"lang\">Languages: {languages}</span>\r\n                    <span className=\"price\">{price}</span>\r\n                </div>\r\n                <Link className=\"back\" to='/comics'>Back to all</Link>\r\n            </section> \r\n        )\r\n    }\r\n    \r\n    const errorMsg = error ? <Error/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error) && comic !== null ? <ComicInfo comic={comic}/> : null;\r\n\r\n    return (\r\n        <>\r\n            {errorMsg}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n   \r\n}\r\n\r\nexport default ComicItem;"],"names":["comicId","useParams","_useState","useState","_useState2","_slicedToArray","comic","setComic","_useMarvelService","useMarvelService","loading","error","getComic","clearError","useEffect","updateComic","then","onComicLoaded","catch","ComicInfo","_ref","title","desc","pages","price","languages","thumbnail","_jsxs","className","children","_jsx","match","src","alt","style","objectFit","Link","to","errorMsg","Error","spinner","Spinner","content","_Fragment"],"sourceRoot":""}